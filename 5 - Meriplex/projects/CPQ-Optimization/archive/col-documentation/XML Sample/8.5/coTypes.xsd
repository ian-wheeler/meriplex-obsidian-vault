<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 sp2 U (http://www.altova.com) by prashanthr (CNET Channel) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" xml:lang="EN">
	<xs:include schemaLocation="itemTypes.xsd"/>
	<!-- Simple Types -->
	<xs:complexType name="COCurrency">
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attribute name="unit">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="USD"/>
							<xs:enumeration value="CAD"/>
							<xs:enumeration value="EUR"/>
							<xs:enumeration value="INR"/>
							<xs:enumeration value="GBP"/>
							<xs:enumeration value="AUD"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="CODocumentTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Quote"/>
			<xs:enumeration value="Sales Order"/>
			<xs:enumeration value="Invoice"/>
			<xs:enumeration value="Saved Cart"/>
			<xs:enumeration value="RMA"/>
			<xs:enumeration value="Master Order"/>
			<xs:enumeration value="Sub-order"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CODocumentStages">
		<xs:restriction base="xs:string">
		    <xs:enumeration value="New"/>
			<xs:enumeration value="Lead"/>
			<xs:enumeration value="Qualified"/>
			<xs:enumeration value="Discovery"/>
			<xs:enumeration value="Quoted"/>
			<xs:enumeration value="Commitment"/>
			<xs:enumeration value="Not Ready to Buy"/>
			<xs:enumeration value="Closed"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CONoteTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Internal"/>
			<xs:enumeration value="External"/>
			<xs:enumeration value="Shipping"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CODocumentEventTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="created"/>
			<xs:enumeration value="modified"/>
			<xs:enumeration value="ordered"/>
			<xs:enumeration value="invoiced"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="COEventTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="created"/>
			<xs:enumeration value="modified"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="COCustomerEventTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="created">
				<xs:annotation>
					<xs:documentation> companies only </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="modified">
				<xs:annotation>
					<xs:documentation> applies to contacts and companies </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="COPricingTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="profile"/>
			<xs:enumeration value="tier"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="COEntityAssignmentTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="favoriteList"/>
			<xs:enumeration value="pricing"/>
			<xs:enumeration value="catalog"/>
			<xs:enumeration value="deliveryMethod"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="COEntityAssigneeTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="account"/>
			<xs:enumeration value="contact"/>
			<xs:enumeration value="storesite"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Complex Types -->
	<xs:complexType name="COAccessRightsProfile">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:int"/>
	</xs:complexType>
	<xs:complexType name="COError">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="code" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COWarning">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="code" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COAuthentication">
		<xs:sequence>
			<xs:element name="shortcut">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="email">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="password" minOccurs="0">
				<xs:annotation>
					<xs:documentation> password is of course mandatory on any request message it may not be 
						echoed on responses </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="encrypted" type="xs:boolean">
								<xs:annotation>
									<xs:documentation>set this to true if the password being sent is encrypted. NOTE: the encrypted password needs to be derived by encrypting the plaintext pasword with the Encryption Key on the Additional Links page within ChannelOnline. If you do not have an encryption key then the encrypted password has to be obtained by contacting channelsupport.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="userAgent" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of your connecting application.  You will need to register your useragent with the support team before your connection attempts will be processed. 
Its required on all requests and may not be present on the responses. (like password attribute)</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="version" type="xs:float"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="error" type="COError" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Is ignored on request messages. Will appear on response messages when 
						there are fatals errors to report. No data will follow when there are fatal errors 
						present. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="warning" type="COError" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> Is ignored on request messages. Will appear on response messages when 
						there are non-fatals errors to report or if the system needs to notify the user of 
						something. (Version update, etc) </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COEvent">
		<xs:sequence>
			<xs:element name="user" type="COShortUser" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="when" type="xs:dateTime"/>
	</xs:complexType>
	<xs:complexType name="COEntityAssignment">
		<xs:sequence>
			<xs:element name="assignees">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="assignee" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="type" type="COEntityAssigneeTypes" use="required"/>
								<xs:attribute name="id" type="xs:int" use="required"/>
								<xs:attribute name="action">
									<xs:annotation>
										<xs:documentation>default is add
remove will delete this assignment. this attribute will not be present on exports</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="add"/>
											<xs:enumeration value="remove"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="rank" type="xs:int">
									<xs:annotation>
										<xs:documentation>this is the order in which the assigned entity is to be listed</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="status" type="xs:string">
									<xs:annotation>
										<xs:documentation>only present on import resopnses and will have the description message, if the import fails.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" type="COEntityAssignmentTypes" use="required"/>
		<xs:attribute name="id" type="xs:string" use="required"/>
		<xs:attribute name="name"/>
	</xs:complexType>
	<xs:complexType name="CODocumentEvent">
		<xs:complexContent>
			<xs:extension base="COEvent">
				<xs:attribute name="type" type="CODocumentEventTypes"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COCustomerEvent">
		<xs:complexContent>
			<xs:extension base="COEvent">
				<xs:attribute name="type" type="COCustomerEventTypes"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COTerm">
		<xs:sequence>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="days" type="xs:unsignedInt" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="sortOrder" type="xs:unsignedInt" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COShortSupplier">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="supplierId" type="xs:nonNegativeInteger"/>
				<xs:attribute name="accountNumber" type="xs:string"/>
				<xs:attribute name="supplierNumber" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COContract">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="id" type="xs:long"/>
				<xs:attribute name="supplierId" type="xs:nonNegativeInteger">
					<xs:annotation>
						<xs:documentation>supplier this contract is linked to</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="contractNumber" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COAddress">
		<xs:sequence>
			<xs:element name="description" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="firstName" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="lastName" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="title" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="companyName" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="addressLine1" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="addressLine2" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="addressLine3" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="city" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="state" type="COState" minOccurs="0"/>
			<xs:element name="country" type="COCountry" minOccurs="0"/>
			<xs:element name="postalCode" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="work_phone" type="COPhone" minOccurs="0"/>
			<xs:element name="fax" type="COPhone" minOccurs="0"/>
			<xs:element name="email" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="addressId" type="xs:nonNegativeInteger" use="optional">
			<xs:annotation>
				<xs:documentation>This attribute should be used for export and update requests only and not for import request.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="code" type="xs:string" use="optional"/>
		<xs:attribute name="standard" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>This field is false when the address does not match the "standard"
					address for the given code.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="COPhone">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="extension" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COSalesPerson">
		<xs:complexContent>
			<xs:extension base="COUser">
				<xs:sequence>
					<xs:element name="accessRightsProfile" type="COAccessRightsProfile" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="deleted" type="xs:boolean"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COShortSalesPerson">
		<xs:complexContent>
			<xs:extension base="COShortUser"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COContact">
		<xs:complexContent>
			<xs:extension base="COUser">
				<xs:sequence>
					<xs:element name="deleted" type="xs:boolean" minOccurs="0"/>
					<xs:element name="password" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation> This field is available on IMPORT ONLY. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="showAllDocsOnStore" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If value is unspecified then the value will be taken for their 
								assigned store</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assignedCatalog" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>On import, only the ID will be used to
								specify the catalog
							</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="catalogId" type="xs:nonNegativeInteger"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="contactCustomFields" type="COCustomFields" minOccurs="0">
						<xs:annotation>
							<xs:documentation>fieldType should be reseller_cc</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="subsidiaries" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="company">
									<xs:annotation>
										<xs:documentation>contact element will be empty in this context</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:complexContent>
											<xs:extension base="COCustomerSummary">
												<xs:attribute name="action">
													<xs:annotation>
														<xs:documentation>default action is add. If a subsidiary needs to be removed for a contact, send remove</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="add"/>
															<xs:enumeration value="remove"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="contactIntegrationIds" type="COIntegrationIds" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="isDefault" type="xs:boolean" use="optional"/>
				<xs:attribute name="storesiteEnabled" type="xs:boolean" use="optional"/>
				<xs:attribute name="isAdmin" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>is the contact an admin in the CPAS system</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="sendWelcomeNotification" use="optional">
					<xs:annotation>
						<xs:documentation>Send the "welcome" email to this contact if the value is true.  The message will not be delivered if storesiteEnabled is not also true or the password is not set.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COUser">
		<xs:complexContent>
			<xs:extension base="COAddress">
				<xs:sequence>
					<xs:element name="mobile_phone" type="COPhone" minOccurs="0"/>
					<xs:element name="pager" type="COPhone" minOccurs="0"/>
					<xs:element name="other_phone" type="COPhone" minOccurs="0"/>
					<xs:element name="home_phone" type="COPhone" minOccurs="0"/>
					<xs:element name="timezone" minOccurs="0">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:float">
									<xs:attribute name="usesDST" type="xs:boolean"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="userId" type="xs:nonNegativeInteger" use="optional">
					<xs:annotation>
						<xs:documentation>This attribute should be used for export and update requests only and not for import request.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COShortUser">
		<xs:annotation>
			<xs:documentation>Either the email element or the userId attribute are REQUIRED on import.  The system will search for userId matches first,  if not userId is specified then it will use the email address to look up the user.   EMAIL is the preferred method for user lookup..</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="firstName" type="xs:string" minOccurs="0"/>
			<xs:element name="lastName" type="xs:string" minOccurs="0"/>
			<xs:element name="email" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="userId" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="isContact" type="xs:boolean"/>
	</xs:complexType>
	<xs:complexType name="CONote">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" type="CONoteTypes" use="required"/>
				<xs:attribute name="operation" type="Operation">
					<xs:annotation>
						<xs:documentation>use this field to append or replace note fields</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COUSTaxDetail">
		<xs:sequence>
			<xs:element name="taxItem" type="COTax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="freightTaxed" type="xs:boolean"/>
		<xs:attribute name="laborTaxed" type="xs:boolean"/>
		<xs:attribute name="serviceTaxed" type="xs:boolean"/>
		<xs:attribute name="overallRate" type="xs:decimal"/>
		<xs:attribute name="overallAmount" type="xs:decimal" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COPayment">
		<xs:sequence>
			<xs:element name="PONumber" type="xs:string" minOccurs="0"/>
			<xs:element name="authorizationNumber" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> This is the transaction id from the processor for hosted processors or authorization/confirmation number returned by the credit processor if this payment has been processed in channelOnline.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditCard" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="COCreditCard">
							<xs:attribute name="encrypted" type="xs:boolean"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="flooring" type="COFlooring" minOccurs="0"/>
			<xs:element name="authorizationToken" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>this is the identifier for the customer's credit card info on the credit card processor</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="paymentType">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Undefined"/>
					<xs:enumeration value="PO"/>
					<xs:enumeration value="Credit Card"/>
					<xs:enumeration value="Debit Card">
						<xs:annotation>
							<xs:documentation> Not currently supported</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Procurement Card">
						<xs:annotation>
							<xs:documentation> Not currently supported</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="PayPal"/>
					<xs:enumeration value="Money Order or Company Check"/>
					<xs:enumeration value="COD"/>
					<xs:enumeration value="Lease"/>
					<xs:enumeration value="Flooring"/>
					<xs:enumeration value="Cash"/>
					<xs:enumeration value="ACH / EFT"/>
					<xs:enumeration value="Credit Card Electronic"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="COCreditCard">
		<xs:sequence>
			<xs:element name="number" type="xs:string">
				<xs:annotation>
					<xs:documentation>only the last 4 digits or the first four digits of the credit card</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ccType" type="xs:string"/>
			<xs:element name="cardHolder" type="xs:string"/>
			<xs:element name="expMonth" type="xs:string"/>
			<xs:element name="expYear" type="xs:string"/>
			<xs:element name="securityCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>this will no longer be populated and will be deprecated after 5.5</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="authorizationCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>this is the authorization code for the payment issued by the credit card network.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COFlooring">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="account" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COCustomFieldSetup">
		<xs:sequence>
			<xs:choice>
				<xs:element name="textInput">
					<xs:complexType>
						<xs:attribute name="minLength" type="xs:unsignedInt" use="required"/>
						<xs:attribute name="maxLength" type="xs:unsignedInt" use="required">
							<xs:annotation>
								<xs:documentation>200 is the max value for this element</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="numberInput">
					<xs:complexType>
						<xs:attribute name="minLength" type="xs:unsignedInt" use="required"/>
						<xs:attribute name="maxLength" type="xs:unsignedInt" use="required">
							<xs:annotation>
								<xs:documentation>200 is the max value for this element</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="dateInput">
					<xs:annotation>
						<xs:documentation>date format: mm/dd/yyyy</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="regexpValidatedInput">
					<xs:complexType>
						<xs:attribute name="expression" type="xs:string" use="required"/>
						<xs:attribute name="message" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="dropDown">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="dropDownOption" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="value" type="xs:string"/>
										<xs:element name="description" type="xs:string" minOccurs="0"/>
										<xs:element name="rank" type="xs:unsignedInt"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="enabled" type="xs:boolean"/>
		<xs:attribute name="storesite" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>this field will be ignored unless enabled is 'true'</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="required" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>this field will be ignored unless storesite is 'true'</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="label" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>label is always 'Cost Center' for costCenter fields.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="COCustomFields">
		<xs:sequence>
			<xs:element name="field" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="name" type="xs:string"/>
							<xs:attribute name="fieldType">
								<xs:annotation>
									<xs:documentation>some fields are not avaialable for import. Like storesite_checkout.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="reseller_invoice"/>
										<xs:enumeration value="company_invoice"/>
										<xs:enumeration value="reseller_q">
											<xs:annotation>
												<xs:documentation> Field specific to your ChannelOnline account at document 
													level </xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="reseller_qp">
											<xs:annotation>
												<xs:documentation> Field specific to your ChannelOnline account at the line 
													item level </xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="company_q">
											<xs:annotation>
												<xs:documentation> Field specific to your specific customer at the document 
													level </xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="company_qp">
											<xs:annotation>
												<xs:documentation> Field specific to your specific customer at the line 
													item level</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="reseller_c">
											<xs:annotation>
												<xs:documentation>Field specific to your ChannelOnline account at the Customer level</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="reseller_cc">
											<xs:annotation>
												<xs:documentation>Field specific to your ChannelOnline account at the Contact level.</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="reseller_po"/>
										<xs:enumeration value="reseller_rma"/>
										<xs:enumeration value="storesite_checkout"/>
										<xs:enumeration value="reseller_esign"/>
										<xs:enumeration value="reseller_esign_static"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="key" type="xs:string">
								<xs:annotation>
									<xs:documentation>customfield.$id this can be used in update_entity_request </xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COShortCarrier">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="carrierId" type="xs:nonNegativeInteger" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COShortShipService">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="shipServiceId" type="xs:integer">
					<xs:annotation>
						<xs:documentation> You MUST specify the shipServiceId when importing containers. For a 
							current list contact ChannelSupport </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COShipMethod">
		<xs:sequence>
			<xs:element name="carrier" type="COShortCarrier"/>
			<xs:element name="service" type="COShortShipService"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COContainer">
		<xs:sequence>
			<xs:element name="shipStatus" type="xs:string"/>
			<!-- TODO ADD ENUMERATION HERE FOR shipStatus-->
			<xs:element name="shipMethod" type="COShipMethod"/>
			<xs:element name="quantity" type="xs:decimal"/>
			<xs:element name="trackingNumber" type="xs:string" minOccurs="0"/>
			<xs:element name="shipDate" type="xs:string" minOccurs="0"/>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element name="serialNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="assetTag" type="xs:string" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
		</xs:sequence>
		<xs:attribute name="containerId" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COLinkedProduct">
		<xs:simpleContent>
			<xs:extension base="xs:nonNegativeInteger">
				<xs:attribute name="docId" type="xs:long" use="optional"/>
				<xs:attribute name="docNumber" type="xs:string" use="optional"/>
				<xs:attribute name="poId" type="xs:long" use="optional"/>
				<xs:attribute name="poNumber" type="xs:string" use="optional"/>
				<xs:attribute name="quantity" type="xs:float" use="optional">
					<xs:annotation>
						<xs:documentation>quantity from the linked document. For RMA this is the quantity from the original  document's line.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="dropship" type="xs:boolean" use="optional"/>
				<xs:attribute name="docType" use="optional">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="SalesOrder"/>
							<xs:enumeration value="Purchase Order"/>
							<xs:enumeration value="RMA"/>
							<xs:enumeration value="Supplier RMA"/>
							<xs:enumeration value="Invoice"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="linkedQuantity" type="xs:float" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COCustomer">
		<xs:complexContent>
			<xs:extension base="COAddress">
				<xs:sequence>
					<xs:element name="orderProcessing" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Please contact your ChannelOnline sales rep to subscribe to this order processing option.
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="Manual">
									<xs:annotation>
										<xs:documentation>Currently this is the only supported option for "OrderProcessing" node.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="Automatic">
									<xs:annotation>
										<xs:documentation>This option is not currently supported.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="tax" type="COCustomerTax" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Rate must be expressed as a two decimal number Example: 3.45 or 4.70%</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="terms" type="COTerm" minOccurs="0"/>
					<xs:element name="website" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
											READ ONLY FIELD ON IMPORT.  For reference only.
											</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pricing" minOccurs="0">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="id"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="contact" type="COContact" minOccurs="0"/>
					<xs:element name="customerIntegrationIds" type="COIntegrationIds" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="customerNumber" type="xs:string"/>
				<xs:attribute name="locationCode" type="xs:string"/>
				<xs:attribute name="customerID" type="xs:string">
					<xs:annotation>
						<xs:documentation>If customerId is available and there is more than one match on customer number, customerId shall be used for the customer record.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COCustomerDetail">
		<xs:complexContent>
			<xs:extension base="COAddress">
				<xs:sequence>
					<xs:element name="deleted" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>deleted="false" or "undeleting" via this mechanism will only work if a customerId is specified as an attribute to the parent node.  If custonerId is not specified then a new record will be created instead of restoring the old one.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="orderProcessing" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Please contact your ChannelOnline sales rep to subscribe to this order processing option.
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="Manual">
									<xs:annotation>
										<xs:documentation>Currently this is the only supported option for "OrderProcessing" node.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="Automatic">
									<xs:annotation>
										<xs:documentation>This option is not currently supported.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="parentCustomer" minOccurs="0">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="customerId" use="optional">
										<xs:annotation>
											<xs:documentation> Only the customerId
												field will be used to determine what
												customer to assign as the currents
												parent.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="customerNumber" use="optional"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="newCustomerNumber" minOccurs="0">
						<xs:annotation>
							<xs:documentation> When reimporting, it's often useful to change the previously 
								generated customerNumber, use this field to change that number </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cpas" minOccurs="0">
						<xs:complexType>
							<xs:attribute name="active" type="xs:boolean" use="required">
								<xs:annotation>
									<xs:documentation>set to true if Company Purchase Approval System (CPAS) is turned on. Can only be set at parent level and will be set to all children companies as well.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="allowEditEmailTemplates" type="xs:boolean">
								<xs:annotation>
									<xs:documentation>allow CPAS admins to edit email templates on the store.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="allowCreateContacts" type="xs:boolean">
								<xs:annotation>
									<xs:documentation>allow CPAS admins to create other employees on the store.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:complexType>
					</xs:element>
					<xs:element name="tax" type="COCustomerTax" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Rate must be expressed as a two decimal number or 'Exempt' Example: 3.45 or 4.70%</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="terms" type="COTerm" minOccurs="0"/>
					<xs:element name="website" type="xs:string" minOccurs="0"/>
					<xs:element name="comments" type="xs:string" minOccurs="0"/>
					<xs:element name="leadSource" type="xs:string" minOccurs="0"/>
					<xs:element name="pricing" type="COPricing" minOccurs="0">
						<xs:annotation>
							<xs:documentation> If pricing is unspecified the default priceprofile or priceTier will be 
								used </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountManager" type="COShortSalesPerson" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If you do not specify an accountManager, the customer will be 
								assigned to the Default SalesRep</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billing" minOccurs="0" maxOccurs="unbounded">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="COAddress">
									<xs:attribute name="isDefault" type="xs:boolean"/>
									<xs:attribute name="delete" type="xs:boolean"/>
									<xs:attribute name="updateMethod">
										<xs:annotation>
											<xs:documentation>overwrite will only work if addressId attribute is specified. Otherwise, this address is added to the billing list.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="append"/>
												<xs:enumeration value="overwrite"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="shippingAddresses" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="shipping" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType>
										<xs:complexContent>
											<xs:extension base="COAddress">
												<xs:attribute name="delete" type="xs:boolean"/>
												<xs:attribute name="isDefault" type="xs:boolean"/>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
							<xs:attribute name="updateMethod" use="optional" default="append">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="append">
											<xs:annotation>
												<xs:documentation>Adds any shipping addresses listed to the shipping history for the current customer.</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="overwrite">
											<xs:annotation>
												<xs:documentation>Replaces all the addresses currently in the shipping history with those listed here.</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="useShippingCodeIdentifier" type="xs:boolean"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="contact" type="COContact" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="event" type="COCustomerEvent" minOccurs="0" maxOccurs="3">
						<xs:annotation>
							<xs:documentation> You may only specify up to one event of each type 
								</xs:documentation>
						</xs:annotation>
					</xs:element>
					<!-- TODO RESTRICT ON UNIQUE event/type -->
					<xs:element name="assignedStore" minOccurs="0">
						<xs:annotation>
							<xs:documentation>On import, only the ID will be used to
								specify the store
							</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="storeId" type="xs:nonNegativeInteger"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="assignedCatalog" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>On import, only the ID will be used to
								specify the catalog
							</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="catalogId" type="xs:nonNegativeInteger"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="costCenter" type="COCustomFieldSetup" minOccurs="0"/>
					<xs:element name="customFields" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="documentLevel" minOccurs="0">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="customField" type="COCustomFieldSetup" minOccurs="0" maxOccurs="unbounded"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="itemLevel" minOccurs="0">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="customField" type="COCustomFieldSetup" minOccurs="0" maxOccurs="3"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="shippingRules" type="COShippingRules" minOccurs="0"/>
					<xs:element name="customerCustomFields" type="COCustomFields" minOccurs="0">
						<xs:annotation>
							<xs:documentation>fieldType should be reseller_c</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requireOrderVerification" type="xs:boolean" minOccurs="0"/>
					<xs:element name="originalCreditLimit" type="xs:decimal" minOccurs="0"/>
					<xs:element name="availableCreditLimit" type="xs:decimal" minOccurs="0"/>
					<xs:element name="stage" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>only present for lead and prospect</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priority" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>only present for lead and prospect</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="progress" type="xs:integer" minOccurs="0">
						<xs:annotation>
							<xs:documentation>only present for lead and prospect</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="publicSector" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="no"/>
								<xs:enumeration value="federal"/>
								<xs:enumeration value="statelocal"/>
								<xs:enumeration value="eduk12"/>
								<xs:enumeration value="eduhigh"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="social" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="link" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType>
										<xs:simpleContent>
											<xs:extension base="xs:string">
												<xs:attribute name="media">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="facebook"/>
															<xs:enumeration value="twitter"/>
															<xs:enumeration value="linkedin"/>
															<xs:enumeration value="youtube"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:extension>
										</xs:simpleContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="notificationEmail" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="100"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="defaultPaymentOption" type="COPaymentOption" minOccurs="0"/>
					<xs:element name="paymentOptions" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="payment" maxOccurs="unbounded">
									<xs:complexType>
										<xs:simpleContent>
											<xs:extension base="COPaymentOption">
												<xs:attribute name="action">
													<xs:annotation>
														<xs:documentation>default is add. use delete to disable the specified payment option for this account. For customers being created, "add" actions will be ignored. Only "remove" will be used to determine what options are disabled. All active payment options are included by default.</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="add"/>
															<xs:enumeration value="remove"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:extension>
										</xs:simpleContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="deliveryMethods" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="shipMethod" maxOccurs="unbounded">
									<xs:complexType>
										<xs:complexContent>
											<xs:extension base="COShipMethod">
												<xs:attribute name="action">
													<xs:annotation>
														<xs:documentation>default is add. Use remove to delete a delivery method option for this customer</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="favoritesList" type="xs:string" minOccurs="0"/>
					<xs:element name="pricingTier" type="xs:string" minOccurs="0"/>
					<xs:element name="contactAddressAccess" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="all"/>
								<xs:enumeration value="own"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				<xs:element name="customerIntegrationIds" type="COIntegrationIds" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="type" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="customer"/>
							<xs:enumeration value="lead"/>
							<xs:enumeration value="prospect"/>
							<xs:enumeration value="partner"/>
							<xs:enumeration value="vendor"/>
							<xs:enumeration value="client"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="customerId" type="xs:nonNegativeInteger" use="optional"/>
				<xs:attribute name="customerNumber" type="xs:string"/>
				<xs:attribute name="locationCode" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COSupplierDetail">
		<xs:complexContent>
			<xs:extension base="COAddress">
				<xs:sequence>
					<xs:element name="terms" type="COTerm" minOccurs="0"/>
					<xs:element name="creditLimit" type="xs:decimal" minOccurs="0"/>
					<xs:element name="availableCreditLimit" type="xs:decimal" minOccurs="0"/>
					<xs:element name="website" type="xs:string" minOccurs="0"/>
					<xs:element name="comments" type="xs:string" minOccurs="0"/>
					<xs:element name="contact" type="COUser" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="supplierId" type="xs:nonNegativeInteger" use="optional">
					<xs:annotation>
						<xs:documentation>This attribute should be used for export and update requests only and not for import request.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="supplierAccountNumber" type="xs:string" use="optional"/>
				<xs:attribute name="supplierNumber" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COCustomerImportResponse">
		<xs:complexContent>
			<xs:extension base="COCustomerSummary">
				<xs:sequence>
					<xs:element name="warning" type="COError" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="error" type="COError" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COCustomerSummary">
		<xs:sequence>
			<xs:element name="companyName" type="xs:string" minOccurs="0"/>
			<xs:element name="contact" type="COShortUser" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="customerId" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="customerNumber" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COCustomerReport">
		<xs:sequence>
			<xs:element name="companyName" type="xs:string"/>
			<xs:element name="created" type="xs:dateTime"/>
			<xs:element name="modified" type="xs:dateTime"/>
			<xs:element name="contact" type="COShortUser" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="customerId" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="customerNumber" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="CODocumentReport">
		<xs:sequence>
			<xs:element name="status" type="xs:string" minOccurs="0"/>
			<xs:element name="reported" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation> The date that this document will show up when running reports against 
						it. This will likely be the last modified time on Quotes and the Ordered Date on Sales 
						Orders. On Sales Orders, this field is editable in the interface. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="total" type="COCurrency">
				<xs:annotation>
					<xs:documentation> Only appropiate on the export message, read only </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="documentId" type="xs:long"/>
		<xs:attribute name="documentNumber">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:maxLength value="18"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="documentType" type="CODocumentTypes"/>
		<xs:attribute name="revisionNumber" type="xs:nonNegativeInteger" use="optional">
			<xs:annotation>
				<xs:documentation> Read only field.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CODocument">
		<xs:sequence>
			<xs:element name="description" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="status" type="xs:string" minOccurs="0"/>
			<xs:element name="stage" type="CODocumentStages" minOccurs="0"/>
			<xs:element name="probability" type="xs:int" minOccurs="0"/>
			<xs:element name="orderApprovalType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						automatic or manual indicating how the credit
						approval was done for the order. This is only
						valid for Sales Orders and Invices.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="automatic"/>
						<xs:enumeration value="manual"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="storesiteViewable" type="xs:boolean" minOccurs="0"/>
			<xs:element name="deleted" type="xs:boolean" minOccurs="0"/>
			<xs:element name="event" type="CODocumentEvent" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						ON IMPORT: If more than one event exists for a
						given type a random instance will be used
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="reported" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
						The date that this document will show up when
						running reports against it. This will likely be
						the last modified time on Quotes and the Ordered
						Date on Sales Orders. On Sales Orders, this
						field is editable in the interface.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="approvedBy" type="COShortSalesPerson" minOccurs="0"/>
			<xs:element name="expiration" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						will be sent only when the expiration date is
						set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="followUp" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						will be sent only when follow up is enabled
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="note" type="CONote" minOccurs="0" maxOccurs="3">
				<!--
					<xs:unique name="noteType">  
					<xs:selector xpath="note"/>
					<xs:field xpath="note/@type"/>
					</xs:unique>
				-->
			</xs:element>
			<xs:element name="carrierAccount" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="shipTo" type="COAddress" minOccurs="0"/>
			<xs:element name="billTo" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="COAddress">
							<xs:attribute name="parentCode" type="xs:string"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="remitTo" type="COAddress" minOccurs="0"/>
			<xs:element name="salesPerson" type="COShortSalesPerson" minOccurs="0"/>
			<xs:element name="accountManager" type="COShortSalesPerson" minOccurs="0"/>
			<xs:element name="customer" type="COCustomer"/>
			<xs:element name="shippingMethod" type="COShipMethod" minOccurs="0"/>
			<xs:element name="payment" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="COPayment">
							<xs:sequence/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="dueDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						only present for documentType Invoice
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="itemList" type="COItemList"/>
			<xs:element name="customDocFields" type="COCustomFields" minOccurs="0"/>
			<xs:element name="costCenter" type="COCustomFields" minOccurs="0"/>
			<xs:element name="totalItemCost" type="COCurrency" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Only appropiate on the export message, read only
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subTotal" type="COCurrency" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Only appropiate on the export message, read only
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="discount" minOccurs="0"/>
			<xs:element name="tax" type="COCurrency"/>
			<xs:element name="taxDetail" type="COUSTaxDetail" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Only appropiate on the export message, read only
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="shippingHandling" type="COCurrency"/>
			<xs:element name="shippingHandlingCost" type="COCurrency" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						only present if shipping cost option is enabled
						in company settings
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="miscAmount" type="COCurrency" minOccurs="0"/>
			<xs:element name="restocking" type="COCurrency" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						will be populated for RMA(s)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="total" type="COCurrency" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Only appropiate on the export message, read only
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="documentIntegrationIds" type="CODocumentIntegrationIds" minOccurs="0"/>
			<xs:element ref="documentDynamicLink" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="documentId" type="xs:long"/>
		<xs:attribute name="documentNumber">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:maxLength value="18"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="documentType" type="CODocumentTypes"/>
		<xs:attribute name="markedForExport" type="xs:boolean"/>
		<xs:attribute name="locked" type="xs:boolean"/>
		<xs:attribute name="revisionNumber" type="xs:nonNegativeInteger" use="optional">
			<xs:annotation>
				<xs:documentation> Read only field.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="confirmationNumber" type="xs:string">
			<xs:annotation>
				<xs:documentation>populated for RMAs</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="masterDocumentId" type="xs:long">
			<xs:annotation>
				<xs:documentation>only populated on Sub-orders</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="masterDocumentNumber" type="xs:string">
			<xs:annotation>
				<xs:documentation>only populated on Sub-orders and will have the master order number</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CODocumentPaymentDetail">
		<xs:sequence>
			<xs:element name="description" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="event" type="CODocumentEvent" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> ON IMPORT: If more than one event exists for a given type a random 
						instance will be used </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="carrierAccount" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="shipTo" type="COAddress" minOccurs="0"/>
			<xs:element name="billTo" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="COAddress">
							<xs:attribute name="parentCode" type="xs:string"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="salesPerson" type="COShortSalesPerson" minOccurs="0"/>
			<xs:element name="customer" type="COCustomer"/>
			<xs:element name="shippingMethod" type="COShipMethod" minOccurs="0"/>
			<xs:element name="payment">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PONumber" minOccurs="0"/>
						<xs:element name="authorizationNumber" type="xs:string" minOccurs="0"/>
						<xs:element name="creditCard" type="COCreditCard" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="paymentType" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="itemList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="line" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="manufacturer" type="xs:string" minOccurs="0"/>
									<xs:element name="partNumber" type="xs:string" minOccurs="0"/>
									<xs:element name="price" type="COCurrency" minOccurs="0"/>
									<xs:element name="quantity" type="xs:int" minOccurs="0"/>
								</xs:sequence>
								<xs:attribute name="lineItemNumber" type="xs:int"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="totalItemCost" type="COCurrency" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Only appropiate on the export message, read only</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subTotal" type="COCurrency" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Only appropiate on the export message, read only </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tax" type="COCurrency"/>
			<xs:element name="shippingHandling" type="COCurrency"/>
			<xs:element name="total" type="COCurrency">
				<xs:annotation>
					<xs:documentation> Only appropiate on the export message, read only </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="documentId" type="xs:long"/>
		<xs:attribute name="documentNumber">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:maxLength value="18"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CODocumentImport">
		<xs:complexContent>
			<xs:extension base="CODocument">
				<xs:attribute name="overwriteExisting" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>If a document already exists with this number, would you prefer to overwrite it with the new data (true) or reject the import (false)?</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="saveOriginalAsRevision" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Only applies when overwriteExisting is true.  Saves the overwritten document as a revision of the new document.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute ref="triggerOrderNotification" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CODocumentImportResponse">
		<xs:complexContent>
			<xs:extension base="CODocumentSummary">
				<xs:sequence>
					<xs:element name="warning" type="COError" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="error" type="COError" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CODocumentSummary">
		<xs:sequence>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="status" type="xs:string" minOccurs="0"/>
			<xs:element name="itemList" type="COItemSummaryList" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="documentId" use="optional"/>
		<xs:attribute name="documentNumber" use="optional"/>
		<xs:attribute name="documentType" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COPurchaseOrder">
		<xs:sequence>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="status" type="xs:string" minOccurs="0"/>
			<xs:element name="confirmationNumber" type="xs:string" minOccurs="0"/>
			<xs:element name="endUserPONumber" type="xs:string" minOccurs="0"/>
			<xs:element name="deleted" type="xs:boolean" minOccurs="0"/>
			<xs:element name="autofulfill" type="xs:boolean" minOccurs="0"/>
			<xs:element name="dropship" type="xs:boolean" minOccurs="0"/>
			<xs:element name="blindPackaging" type="xs:boolean" minOccurs="0"/>
			<xs:element name="shipComplete" type="xs:boolean" minOccurs="0"/>
			<xs:element name="allowBackorder" type="xs:boolean" minOccurs="0"/>
			<xs:element name="event" type="CODocumentEvent" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> ON IMPORT: If more than one event exists for a given type a random 
						instance will be used </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="note" type="CONote" minOccurs="0" maxOccurs="3">
				<!--
				<xs:unique name="noteType">  
					<xs:selector xpath="note"/>
					<xs:field xpath="note/@type"/>
				</xs:unique>
				-->
			</xs:element>
			<xs:element name="carrierAccount" type="xs:string" minOccurs="0"/>
			<xs:element name="shipTo" type="COAddress" minOccurs="0"/>
			<xs:element name="billTo" type="COAddress" minOccurs="0"/>
			<xs:element name="buyer" type="COShortSalesPerson" minOccurs="0"/>
			<xs:element name="supplier" type="COShortSupplier"/>
			<xs:element name="supplierSalesPerson" type="COShortUser" minOccurs="0"/>
			<xs:element name="shippingMethod" type="COShipMethod" minOccurs="0"/>
			<xs:element name="payment" type="COPayment" minOccurs="0"/>
			<xs:element name="itemList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="product" type="COQuotedSupplierProduct" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="customDocFields" type="COCustomFields" minOccurs="0"/>
			<xs:element name="totalItemCost" type="COCurrency">
				<xs:annotation>
					<xs:documentation> Only appropiate on the export message, read only</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subTotal" type="COCurrency"/>
			<xs:element name="tax" type="COCurrency"/>
			<xs:element name="shippingHandling" type="COCurrency"/>
			<xs:element name="total" type="COCurrency"/>
		</xs:sequence>
		<xs:attribute name="purchaseOrderId" type="xs:long"/>
		<xs:attribute name="purchaseOrderNumber" type="xs:string"/>
		<xs:attribute name="isRMA" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>will be set to true if this is RMA po</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="markedForExport" type="xs:boolean"/>
		<xs:attribute name="locked" type="xs:boolean"/>
	</xs:complexType>
	<xs:complexType name="COPurchaseOrderImportResponse">
		<xs:complexContent>
			<xs:extension base="COPurchaseOrderSummary">
				<xs:sequence>
					<xs:element name="warning" type="COError" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="error" type="COError" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COPurchaseOrderReport">
		<xs:sequence>
			<xs:element name="supplier" type="xs:string"/>
			<xs:element name="status" type="xs:string" minOccurs="0"/>
			<xs:element name="reported" type="xs:dateTime"/>
			<xs:element name="autofulfill" type="xs:boolean"/>
			<xs:element name="total" type="COCurrency"/>
		</xs:sequence>
		<xs:attribute name="purchaseOrderId" use="optional"/>
		<xs:attribute name="purchaseOrderNumber" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COPurchaseOrderSummary">
		<xs:sequence>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="status" type="xs:string" minOccurs="0"/>
			<xs:element name="itemList" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="product" type="COQuotedSupplierProduct" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="purchaseOrderId" use="optional"/>
		<xs:attribute name="purchaseOrderNumber" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COPricing">
		<xs:sequence>
			<xs:element name="owner" type="COShortSalesPerson"/>
			<xs:element name="name" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="pricingType" type="COPricingTypes"/>
		<xs:attribute name="pricingId" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COPricingImport">
		<xs:complexContent>
			<xs:extension base="COPricingDetail">
				<xs:attribute name="overwriteExisting" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>If a pricing already exists with this number, would you prefer to overwrite it with the new data (true) or reject the import (false)?</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COPricingImportResponse">
		<xs:complexContent>
			<xs:extension base="COPricingSummary">
				<xs:sequence>
					<xs:element name="warning" type="COError" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="error" type="COError" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COPricingSummary">
		<xs:sequence>
			<xs:element name="name" type="xs:string" minOccurs="0"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="pricingId" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="pricingType" type="COPricingTypes" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COEnvelope">
		<xs:sequence>
			<xs:element name="authentication" type="COAuthentication"/>
		</xs:sequence>
		<xs:attribute name="schemaVersion" type="xs:decimal" use="required"/>
	</xs:complexType>
	<xs:complexType name="COCategory">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="code" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COCountry">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="abbreviation">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:maxLength value="10"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COState">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="abbreviation">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:maxLength value="50"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COShippingRules">
		<xs:sequence>
			<xs:element name="markup" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:restriction base="xs:anyType">
							<xs:attribute name="enabled" type="xs:boolean" use="required">
								<xs:annotation>
									<xs:documentation>Apply a markup to the estimated shipping rate.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="percentage" type="xs:decimal" use="required">
								<xs:annotation>
									<xs:documentation>The percentage to mark up the estimated rate.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:restriction>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="free" minOccurs="0">
				<xs:complexType>
					<xs:anyAttribute processContents="lax"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="surcharge" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:restriction base="xs:anyType">
							<xs:attribute name="enabled" type="xs:boolean" use="required">
								<xs:annotation>
									<xs:documentation>Add a handling surcharge to all orders.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="amount" type="xs:decimal" use="required">
								<xs:annotation>
									<xs:documentation>The surcharge amount.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="maximumOrder" type="xs:decimal" use="required">
								<xs:annotation>
									<xs:documentation>Surcharge only applies to orders less than this amount.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="exemptFreeShips" type="xs:boolean" use="required">
								<xs:annotation>
									<xs:documentation>If the order qualifies for free shipping, does the surcharge still apply?</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:restriction>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="fixed" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:restriction base="xs:anyType">
							<xs:attribute name="enabled" type="xs:boolean" use="required">
								<xs:annotation>
									<xs:documentation>Enable fixed price shipping for this customer. Ignores all other rules.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="amount" type="xs:decimal" use="required">
								<xs:annotation>
									<xs:documentation>The amount charged for shipping for this customer on all orders.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:restriction>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attribute name="triggerOrderNotification" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Whether or not to generate the system's order confirmation email if the imported document has the appropriate status.</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:complexType name="COCustomerTax">
		<xs:sequence>
			<xs:element name="rate" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>default = default tax rate specified by the state
exempt = tax exempt
number (in %) = a tax rate thats constant specified by the rate field</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="taxIdNumber" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>used with in conjunction with type=exempt. May be required for reporting purposes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="taxExemptExpiration" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>used with in conjunction with type=exempt. Sets exempt expiration date.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" use="required">
			<xs:annotation>
				<xs:documentation>US = US
GST = CA GST
PST = CA PST
HST = CA HST</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="US"/>
					<xs:enumeration value="GST"/>
					<xs:enumeration value="PST"/>
					<xs:enumeration value="HST"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="COTax">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" use="required">
					<xs:annotation>
						<xs:documentation>denotes the type of tax for the breakdown. See all the enumerations for this field.</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="city"/>
							<xs:enumeration value="state"/>
							<xs:enumeration value="county"/>
							<xs:enumeration value="transportation"/>
							<xs:enumeration value="other1"/>
							<xs:enumeration value="other2"/>
							<xs:enumeration value="other3"/>
							<xs:enumeration value="other4"/>
							<xs:enumeration value="gst"/>
							<xs:enumeration value="pst"/>
							<xs:enumeration value="hst"/>
							<xs:enumeration value="district"/>
							<xs:enumeration value="co delivery fee"/>
							<xs:enumeration value=""/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="rate" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>the tax rate for the corresponding type in %</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="amount" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>the fixed tax amount for the corresponding type</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="name" type="xs:string" use="optional"/>
				<xs:attribute name="exempt" type="xs:boolean" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="discount">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="rate" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="type">
								<xs:annotation>
									<xs:documentation>"percent" or "dollar" based on the type of discount</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="percent"/>
										<xs:enumeration value="dollar"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="value">
								<xs:annotation>
									<xs:documentation>this field along with the type will determine the amount of discount</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="amount" type="COCurrency" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="code" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="Operation">
		<xs:restriction base="xs:string">
			<xs:enumeration value="replace"/>
			<xs:enumeration value="append"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="COSearchFilter">
		<xs:sequence>
			<xs:element name="name">
				<xs:annotation>
					<xs:documentation>priceprofile options
pp.deleted;   0/1
pp.keyword; string
pp.includeRules: 0/1

catalog options
cat.deleted; 0/1
cat.keyword; string
cat.companyStandard; 0/1
cat.includeRules; 0/1

salesperson options
sales.deleted 0/1
sales.group; name of the group
sales.accessRightsProfile; name of the access rights
sales.keyword; string


customfield options
cf.active; 0/1
cf.type; global/customer
cf.customer.id; id of the specific element of "type"
cf.level; type of customfields to be returned.

</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="pp.deleted"/>
						<xs:enumeration value="pp.keyword"/>
						<xs:enumeration value="pp.includeRules"/>
						<xs:enumeration value="sales.deleted"/>
						<xs:enumeration value="sales.group"/>
						<xs:enumeration value="sales.accessRightsProfile"/>
						<xs:enumeration value="sales.keyword"/>
						<xs:enumeration value="cat.deleted"/>
						<xs:enumeration value="cat.keyword"/>
						<xs:enumeration value="cat.companyStandard"/>
						<xs:enumeration value="cat.includeRules"/>
						<xs:enumeration value="cf.active"/>
						<xs:enumeration value="cf.type"/>
						<xs:enumeration value="cf.customer.id"/>
						<xs:enumeration value="cf.level"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COPricingDetail">
		<xs:annotation>
			<xs:documentation>use attribute with xsi:type
priceProfile for price profiles
priceTier for tiers</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="type" type="COPricingTypes"/>
			<xs:element name="owner" type="COShortSalesPerson" minOccurs="0">
				<xs:annotation>
					<xs:documentation>informational only: will be ignored on import.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="rounding">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="none"/>
						<xs:enumeration value="up"/>
						<xs:enumeration value="down"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="exceedMsrp" type="xs:boolean"/>
			<xs:element name="allowPriceBelowCost" type="xs:boolean"/>
			<xs:element name="allowZeroPrice" type="xs:boolean"/>
			<xs:element name="defaultRule" type="COPricingRuleRate"/>
			<xs:element name="defaultServiceRule" type="COPricingRuleRate"/>
			<xs:element name="defaultLaborRule" type="COPricingRuleRate"/>
			<xs:element name="costSelectionRule">
				<xs:complexType>
					<xs:choice>
						<xs:element name="supplierBased" minOccurs="0">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="COShortSupplier">
										<xs:attribute name="ignoreAvailability" type="xs:boolean" use="required"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="costBased" minOccurs="0">
							<xs:complexType>
								<xs:attribute name="ignoreAvailability" type="xs:boolean" use="required"/>
								<xs:attribute name="costRule" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="minimumCost"/>
											<xs:enumeration value="maximumCost"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:choice>
					<xs:attribute name="defaultCostRule" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="minimumCost"/>
								<xs:enumeration value="maximumCost"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="suppliers">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="supplier" type="COShortSupplier" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="govEdu" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="none"/>
						<xs:enumeration value="gov.federal"/>
						<xs:enumeration value="gov.state"/>
						<xs:enumeration value="edu.k12"/>
						<xs:enumeration value="edu.higher"/>
						<xs:enumeration value="edu.erate"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="displayGovEduLabel" type="xs:boolean" minOccurs="0"/>
			<xs:element name="displayContractLabel" type="xs:boolean" minOccurs="0"/>
			<xs:element name="rulesPrecedence">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="category"/>
						<xs:enumeration value="manufacturer"/>
						<xs:enumeration value="supplierCode"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="rules" type="COPricingRule" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COPricingRule">
		<xs:sequence>
			<xs:element name="rule" type="COPricingRuleRate" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>use xsi:type to specify the type of rule. the options are
categoryMfrRule
productRule</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger">
			<xs:annotation>
				<xs:documentation>on import, when empty will create a rule</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="COPricingRuleRate">
		<xs:sequence>
			<xs:element name="method">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="margin"/>
						<xs:enumeration value="markup"/>
						<xs:enumeration value="discount"/>
						<xs:enumeration value="add"/>
						<xs:enumeration value="sellat"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="rate" type="xs:float"/>
			<xs:choice minOccurs="0">
				<xs:element name="catMfrRule" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="categoryId" minOccurs="0">
								<xs:annotation>
									<xs:documentation>"all" implied when this field isnt present.
will be ignored if the shortcut has been upgraded to use three tier categories.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string"/>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="categoryName" minOccurs="0">
								<xs:annotation>
									<xs:documentation>informational only: will be ignored on import.
will not be exported if the shortcut has been upgraded to use three tier categories.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="fullCategoryId" minOccurs="0">
								<xs:annotation>
									<xs:documentation>"all" implied when this field isnt present.
will be ignored if the shortcut has NOT been upgraded to use three tier categories. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string"/>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="fullCategoryName" minOccurs="0">
								<xs:annotation>
									<xs:documentation>informational only: will be ignored on import.
will not be exported if the shortcut has NOT been upgraded to use three tier categories.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="manufacturerId" minOccurs="0">
								<xs:annotation>
									<xs:documentation>"all" implied when this field isnt present</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string"/>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="manufacturerName" minOccurs="0">
								<xs:annotation>
									<xs:documentation>informational only: will be ignored on import</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="costRange" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="from" type="xs:float" minOccurs="0"/>
										<xs:element name="to" type="xs:float" minOccurs="0"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="productRule" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="productId" type="xs:string"/>
							<xs:element name="maxPrice" type="xs:float" minOccurs="0"/>
							<xs:element name="storeDisplay" type="xs:string" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Category">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="parentId">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value=""/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Manufacturer">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="Product">
		<xs:sequence>
			<xs:element name="manufacturerPartNumber" type="xs:string"/>
			<xs:element name="manufacturer" type="Manufacturer"/>
			<xs:element name="category" type="Category"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="COAuthenticationResponse">
		<xs:sequence>
			<xs:element name="shortcut">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="email">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="userAgent" type="xs:string" minOccurs="0"/>
			<xs:element name="error" type="COError" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Is ignored on request messages. Will appear on response messages when 
						there are fatals errors to report. No data will follow when there are fatal errors 
						present. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="warning" type="COError" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> Is ignored on request messages. Will appear on response messages when 
						there are non-fatals errors to report or if the system needs to notify the user of 
						something. (Version update, etc) </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COEnvelopeResponse">
		<xs:sequence>
			<xs:element name="authentication" type="COAuthenticationResponse"/>
		</xs:sequence>
		<xs:attribute name="schemaVersion" type="xs:decimal" use="required"/>
	</xs:complexType>
	<xs:complexType name="COCatalogDetail">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="label" type="xs:string"/>
			<xs:element name="description">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="displayOnStore" type="xs:boolean"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="companyStandard" type="xs:boolean"/>
			<xs:element name="onlyProductsWithUnspsc" type="xs:boolean"/>
			<xs:element name="defaultRuleType">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="include"/>
						<xs:enumeration value="exclude"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="rules" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="rule" type="COCatalogRule" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:complexType name="COCatalogRule">
		<xs:sequence>
			<xs:choice>
				<xs:element name="catMfrRule" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="categoryId" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>"all" implied when this field isnt present</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="manufacturerId" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>"all" implied when this field isnt present</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="productRule" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="productId" type="xs:string"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="newItem" minOccurs="0">
					<xs:annotation>
						<xs:documentation>this applies to full catalog</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="category"/>
							<xs:enumeration value="manufacturer"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="keyword" minOccurs="0">
					<xs:annotation>
						<xs:documentation>this only applies to full catalog</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="keyword" type="xs:string" maxOccurs="unbounded"/>
						</xs:sequence>
						<xs:attribute name="type" use="required">
							<xs:annotation>
								<xs:documentation>the type of keyword. see enumeration for this field.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="manufacturerPartNumber"/>
									<xs:enumeration value="supplierKeyword"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="matchType" use="required">
							<xs:annotation>
								<xs:documentation>regular expression matching type. see enumeration for this field for details</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="contains"/>
									<xs:enumeration value="startsWith"/>
									<xs:enumeration value="endsWith"/>
									<xs:enumeration value="equals"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="costThreshold" type="xs:float" minOccurs="0">
					<xs:annotation>
						<xs:documentation>only applies to full catalog
all products below this cost will be removed from the catalog</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="id" type="xs:int"/>
		<xs:attribute name="ruleType">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="include"/>
					<xs:enumeration value="exclude"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="COCustomFieldDetail">
		<xs:sequence>
			<xs:element name="type">
				<xs:annotation>
					<xs:documentation>global applies to every item specified by the level
customer applies to every item that's for the specified customer</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="global"/>
						<xs:enumeration value="customer"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="customer.id" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>only applies to type=customer customfields.
internal COL id of the customer</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="level">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="company"/>
						<xs:enumeration value="contact"/>
						<xs:enumeration value="doc"/>
						<xs:enumeration value="doclineitem"/>
						<xs:enumeration value="costcenter"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="label" type="xs:string"/>
			<xs:element name="rank" type="xs:int"/>
			<xs:element name="field" type="COCustomFieldSetup"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:element name="documentDynamicLink">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="url" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="text" type="xs:string">
									<xs:annotation>
										<xs:documentation>text to display instead of the url on the document. If not present, the url will be displayed.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="append" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>only present on import requests and will append the links in the request to the links already present on the doc, when true. 
Note: The default is false, which means the links sent in the import will replace all the links on the document.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="COPaymentOption">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Purchase Order"/>
			<xs:enumeration value="C.O.D. (Cash On Delivery)"/>
			<xs:enumeration value="Money Order, Check or ACH / EFT"/>
			<xs:enumeration value="Check or Money Order"/>
			<xs:enumeration value="Lease"/>
			<xs:enumeration value="PayPal"/>
			<xs:enumeration value="Credit Card"/>
			<xs:enumeration value="Credit Card Electronic"/>
			<xs:enumeration value="ACH / EFT Payment"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="COInvoicePayment">
		<xs:sequence>
			<xs:element name="documentNumber">
				<xs:annotation>
					<xs:documentation>The combination of documentNumber and referenceNumber must be unique.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="18"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="paymentDate" type="xs:date" minOccurs="0"/>
			<xs:element name="contact" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="email" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="firstName" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="lastName" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="paymentType" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Cash"/>
						<xs:enumeration value="Cashiers Check"/>
						<xs:enumeration value="Company Check"/>
						<xs:enumeration value="Credit (applied to terms limit)"/>
						<xs:enumeration value="Credit Card"/>
						<xs:enumeration value="Lease Payment"/>
						<xs:enumeration value="Money Order"/>
						<xs:enumeration value="Non-payment"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="referenceNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of documentNumber and referenceNumber must be unique.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="amount" type="xs:decimal" minOccurs="0"/>
			<xs:element name="deleted" type="xs:boolean" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COUpdateInvoicePaymentResponse">
		<xs:complexContent>
			<xs:extension base="COUpdateInvoicePaymentSummary">
				<xs:sequence>
					<xs:element name="error" type="COError" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="COUpdateInvoicePaymentSummary">
		<xs:sequence>
			<xs:element name="documentNumber" type="xs:string"/>
			<xs:element name="documentStatus">
				<xs:annotation>
					<xs:documentation>documentStatus will be Unknown in case the document is not found</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Unpaid"/>
						<xs:enumeration value="Past Due"/>
						<xs:enumeration value="Paid"/>
						<xs:enumeration value="Partial Paid"/>
						<xs:enumeration value="Cancelled"/>
						<xs:enumeration value="Unknown"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="paidAmount" type="COCurrency">
				<xs:annotation>
					<xs:documentation>paidAmount will be 0 in case the document is not found</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="balanceAmount" type="COCurrency">
				<xs:annotation>
					<xs:documentation>balanceAmount will be 0 in case the document is not found</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="totalAmount" type="COCurrency">
				<xs:annotation>
					<xs:documentation>totalAmount will be 0 in case the document is not found</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="identifierType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="key" type="identifierKey" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="COEntityType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>You can specify either a set of fields or an operation. You cannot do both.</xs:documentation>
			</xs:annotation>
			<xs:element name="identifier" type="identifierType" maxOccurs="unbounded"/>
			<xs:element name="field" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="name" type="xs:string" use="required"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="operation" minOccurs="0">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>You can either createInvoice or convertToInvoice depending on how Invoices are created in your system.</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="createInvoice" type="createInvoiceOperationType" minOccurs="0"/>
						<xs:element name="convertToInvoice" type="xs:string" minOccurs="0"/>
						<xs:element name="addProduct" type="addProductOperationType" minOccurs="0"/>
						<xs:element name="removeProduct" type="removeProductOperationType" minOccurs="0"/>
						<xs:element name="createBundle" type="createBundleOperationType" minOccurs="0"/>
						<xs:element name="unbundle" type="unbundleOperationType" minOccurs="0"/>
						<xs:element name="deleteBundle" type="deleteBundleOperationType" minOccurs="0"/>
						<xs:element name="deleteQuote" type="xs:string" minOccurs="0"/>
						<xs:element name="addManualItems" type="addManualItemsOperationType" minOccurs="0"/>
						<xs:element name="deleteCustomer" type="xs:string" minOccurs="0"/>
						<xs:element name="deleteBillingAddress" type="xs:string" minOccurs="0"/>
						<xs:element name="deleteShippingAddress" type="xs:string" minOccurs="0"/>
						<xs:element name="deleteContact" type="xs:string" minOccurs="0"/>
						<xs:element name="addTracking" type="addTrackingOperationType" minOccurs="0"/>
						<xs:element name="addPaymentMethods" type="addDeletePaymentMethodsOperationType" minOccurs="0"/>
						<xs:element name="deletePaymentMethods" type="addDeletePaymentMethodsOperationType" minOccurs="0"/>
						<xs:element name="addShippingMethods" type="addDeleteShippingMethodsOperationType" minOccurs="0"/>
						<xs:element name="deleteShippingMethods" type="addDeleteShippingMethodsOperationType" minOccurs="0"/>
						<xs:element name="setSerialNumbersAndAssetTags" type="setSerialNumbersAndAssetTagsOperationType" minOccurs="0"/>
						<xs:element name="completeOrder" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" type="entityGroupType" use="required"/>
	</xs:complexType>
	<xs:complexType name="updateResultType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>details element may be returned if the action is 'operation'</xs:documentation>
			</xs:annotation>
			<xs:element name="identifier" type="identifierType" maxOccurs="unbounded"/>
			<xs:element name="error" minOccurs="0">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string"/>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="details" minOccurs="0">
				<xs:annotation>
					<xs:documentation>invoiceNumber element will be returned in responce to operations: 'createInvoice', 'convertToInvoice'</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="invoiceNumber" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="entityType" type="entityGroupType" use="required"/>
		<xs:attribute name="success" type="xs:boolean" use="required"/>
	</xs:complexType>
	<xs:simpleType name="entityGroupType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Lead"/>
			<xs:enumeration value="Prospect"/>
			<xs:enumeration value="Customer"/>
			<xs:enumeration value="Contact"/>
			<xs:enumeration value="Quote"/>
			<xs:enumeration value="SalesOrder"/>
			<xs:enumeration value="Invoice"/>
			<xs:enumeration value="PurchaseOrder"/>
			<xs:enumeration value="Product"/>
			<xs:enumeration value="LineItem"/>
			<xs:enumeration value="Container"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="identifierKey">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Email"/>
			<xs:enumeration value="CustomerNumber"/>
			<xs:enumeration value="LocationCode"/>
			<xs:enumeration value="DocumentType"/>
			<xs:enumeration value="QuoteNumber"/>
			<xs:enumeration value="ItemNumber"/>
			<xs:enumeration value="TrackingNumber"/>
			<xs:enumeration value="MfrName"/>
			<xs:enumeration value="MfrPartNumber"/>
			<xs:enumeration value="ProductId"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="createInvoiceOperationType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>If you do not specify any lineItems, all invoiceable line items will be invoiced.</xs:documentation>
			</xs:annotation>
			<xs:element name="lineItem" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="mfrPartNumber" type="xs:string" use="required"/>
					<xs:attribute name="itemQuantity" type="xs:integer" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addProductOperationType">
		<xs:sequence>
			<xs:element name="lineItem" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If you do not specify itemQuantity, it will be defaulted to 1.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="mfrPartNumber" type="xs:string" use="required"/>
					<xs:attribute name="manufacturerName" type="xs:string" use="required"/>
					<xs:attribute name="itemQuantity" type="xs:integer" use="optional"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="removeProductOperationType">
		<xs:sequence>
			<xs:element name="lineItem" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If you do not specify itemQuantity, it will be defaulted to 1.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="mfrPartNumber" type="xs:string" use="required"/>
					<xs:attribute name="itemQuantity" type="xs:integer" use="optional"/>
					<xs:attribute name="lineNumber" type="xs:integer" use="optional"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="createBundleOperationType">
		<xs:sequence>
			<xs:element name="startItemNumber" type="xs:integer"/>
			<xs:element name="lastItemNumber" type="xs:integer"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="unbundleOperationType">
		<xs:sequence>
			<xs:element name="itemNumber" type="xs:integer"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="deleteBundleOperationType">
		<xs:sequence>
			<xs:element name="itemNumber" type="xs:integer"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addManualItemsOperationType">
		<xs:sequence>
			<xs:element name="manualLineItem" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="manufacturerName" type="xs:string" use="required"/>
					<xs:attribute name="mfrPartNumber" type="xs:string" use="required"/>
					<xs:attribute name="category" type="xs:string" use="required"/>
					<xs:attribute name="cost" type="xs:double" use="required"/>
					<xs:attribute name="price" type="xs:double" use="required"/>
					<xs:attribute name="itemQuantity" type="xs:double" use="required"/>
					<xs:attribute name="productType"  use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="product"/>
								<xs:enumeration value="service"/>
								<xs:enumeration value="labor"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="descriptionLineOne" type="xs:string" use="required"/>
					<xs:attribute name="descriptionLineTwo" type="xs:string" />
					<xs:attribute name="itemNote" type="xs:string" />
					<xs:attribute name="supplierPartNumber" type="xs:string" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addTrackingOperationType">
		<xs:attribute name="trackingNumber" type="xs:string" use="required"/>
		<xs:attribute name="quantity" type="xs:integer" use="optional"/>
		<xs:attribute name="shippedDate" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>date format: mm/dd/yyyy</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="status" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Submitted"/>
					<xs:enumeration value="Shipped"/>
					<xs:enumeration value="Delivered"/>
					<xs:enumeration value="Cancelled"/>
					<xs:enumeration value="On Hold"/>
					<xs:enumeration value="BackOrder"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="addDeletePaymentMethodsOperationType">
		<xs:sequence>
			<xs:element name="paymentMethod" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addDeleteShippingMethodsOperationType">
		<xs:sequence>
			<xs:element name="shippingMethod" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="setSerialNumbersAndAssetTagsOperationType">
		<xs:sequence>
			<xs:element name="item" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="serial" type="xs:string" use="required"/>
					<xs:attribute name="asset" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COIntegrationIds">
		<xs:sequence>
			<xs:element name="QuickbooksID" type="xs:string" minOccurs="0"/>
			<xs:element name="ConnectwiseID" type="xs:string" minOccurs="0"/>
			<xs:element name="AutotaskID" type="xs:string" minOccurs="0"/>
			<xs:element name="SalesforceID" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CODocumentIntegrationIds">
		<xs:sequence>
			<xs:element name="QuickbooksOrderID" type="xs:string" minOccurs="0"/>
			<xs:element name="QuickbooksInvoiceID" type="xs:string" minOccurs="0"/>
			<xs:element name="ConnectwiseOpportunityID" type="xs:string" minOccurs="0"/>
			<xs:element name="AutotaskOpportunityID" type="xs:string" minOccurs="0"/>
			<xs:element name="AutotaskQuoteID" type="xs:string" minOccurs="0"/>
			<xs:element name="SalesforceOpportunityID" type="xs:string" minOccurs="0"/>
			<xs:element name="SalesforceOrderID" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
